# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: otestpoint/time/ntp.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from otestpoint.interface import measurementtable_pb2 as measurementtable__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='otestpoint/time/ntp.proto',
  package='OpenTestPoint',
  syntax='proto2',
  serialized_pb=_b('\n\x19otestpoint/time/ntp.proto\x12\rOpenTestPoint\x1a\x16measurementtable.proto\"\xf6\x01\n\x14Measurement_time_ntp\x12\x44\n\x0b\x64\x65scription\x18\x01 \x01(\x0b\x32/.OpenTestPoint.Measurement_time_ntp.Description\x12,\n\x03ntp\x18\x02 \x01(\x0b\x32\x1f.OpenTestPoint.MeasurementTable\x1aj\n\x0b\x44\x65scription\x12\"\n\x04name\x18\x01 \x02(\t:\x14Measurement_time_ntp\x12#\n\x06module\x18\x02 \x02(\t:\x13otestpoint.time.ntp\x12\x12\n\x07version\x18\x03 \x02(\r:\x01\x31\x42\x02H\x01')
  ,
  dependencies=[measurementtable__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_MEASUREMENT_TIME_NTP_DESCRIPTION = _descriptor.Descriptor(
  name='Description',
  full_name='OpenTestPoint.Measurement_time_ntp.Description',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='OpenTestPoint.Measurement_time_ntp.Description.name', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=True, default_value=_b("Measurement_time_ntp").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='module', full_name='OpenTestPoint.Measurement_time_ntp.Description.module', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=True, default_value=_b("otestpoint.time.ntp").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='version', full_name='OpenTestPoint.Measurement_time_ntp.Description.version', index=2,
      number=3, type=13, cpp_type=3, label=2,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=209,
  serialized_end=315,
)

_MEASUREMENT_TIME_NTP = _descriptor.Descriptor(
  name='Measurement_time_ntp',
  full_name='OpenTestPoint.Measurement_time_ntp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='description', full_name='OpenTestPoint.Measurement_time_ntp.description', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ntp', full_name='OpenTestPoint.Measurement_time_ntp.ntp', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_MEASUREMENT_TIME_NTP_DESCRIPTION, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=69,
  serialized_end=315,
)

_MEASUREMENT_TIME_NTP_DESCRIPTION.containing_type = _MEASUREMENT_TIME_NTP
_MEASUREMENT_TIME_NTP.fields_by_name['description'].message_type = _MEASUREMENT_TIME_NTP_DESCRIPTION
_MEASUREMENT_TIME_NTP.fields_by_name['ntp'].message_type = measurementtable__pb2._MEASUREMENTTABLE
DESCRIPTOR.message_types_by_name['Measurement_time_ntp'] = _MEASUREMENT_TIME_NTP

Measurement_time_ntp = _reflection.GeneratedProtocolMessageType('Measurement_time_ntp', (_message.Message,), dict(

  Description = _reflection.GeneratedProtocolMessageType('Description', (_message.Message,), dict(
    DESCRIPTOR = _MEASUREMENT_TIME_NTP_DESCRIPTION,
    __module__ = 'otestpoint.time.ntp_pb2'
    # @@protoc_insertion_point(class_scope:OpenTestPoint.Measurement_time_ntp.Description)
    ))
  ,
  DESCRIPTOR = _MEASUREMENT_TIME_NTP,
  __module__ = 'otestpoint.time.ntp_pb2'
  # @@protoc_insertion_point(class_scope:OpenTestPoint.Measurement_time_ntp)
  ))
_sym_db.RegisterMessage(Measurement_time_ntp)
_sym_db.RegisterMessage(Measurement_time_ntp.Description)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('H\001'))
# @@protoc_insertion_point(module_scope)
